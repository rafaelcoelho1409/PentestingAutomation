#!/bin/bash
optstring=":hf:a:"
export PATH=~/go/bin:~/.cargo/bin:$PATH
TOOLS_PATH=~/TOOLS

#---AUXILIARY FUNCTIONS---
help_function() {
    echo "
    FINGERPRINT

    Args:
        Warning: Use only folder name without spacebar
        [-f] Folder to store all data from vulnerability scan
        [-a] Choose a specific task to be done
            Options:
            - B01_FINGERPRINT
            - B02_SHORTSCAN
            - B03_TRUFFLEHOG
            - B04_TRIVY
        [-h] Help"
    exit 0
}   

run_task() {
    if [[ -n ${folder_init} ]]; then
        ${1}
    else
        echo "Error while running task ${2}"
        exit 1
    fi
}

banner() {
    printf '%*s' 100 | tr ' ' '-'
    echo -e "\n"
    echo -e "${1}\n"
    printf '%*s' 100 | tr ' ' '-'
    echo -e "\n"
}

clean_string() {
    local input=${1}
    # Replace - and / with _
    input="${input//[-\/]/_}"
    # Remove leading _ or /
    input="${input#[_/]}"
    # Remove trailing _ or /
    input="${input%[_/]}"
    echo "${input}"
}


#---MAIN FUNCTIONS---
B01_FINGERPRINT() {
    stage="B01_FINGERPRINT"
    banner "FINGERPRINT - ${stage}"
    if [[ ! -d "${folder}/BBB_fingerprint" ]]; then
        mkdir -p "${folder}/BBB_fingerprint"
    fi
    if [[ -e "${rec_folder}/subdomains/subdomains_probe.txt" ]]; then
        cat "${rec_folder}/subdomains/subdomains_probe.txt" \
            | httpx -t 1000 -td \
            | sed -r 's/\x1B\[[0-9;]*[mK]//g' \
            | awk '/\[.*\]/' \
            > "${folder}/BBB_fingerprint/B01_fingerprint.txt"
    fi
}

B02_SHORTSCAN() {
    stage="B02_SHORTSCAN"
    banner "FINGERPRINT - ${stage}"
    #MICROSOFT - WINDOWS SERVER - IIS
    if [[ -e "${folder}/BBB_fingerprint/B01_fingerprint.txt" ]]; then
        if [[ ! -d "${folder}/BBB_fingerprint/B02_shortscan" ]]; then
            mkdir "${folder}/BBB_fingerprint/B02_shortscan"
        fi
        rows_to_filter=$(\
            cat "${folder}/BBB_fingerprint/B01_fingerprint.txt" \
            | awk -F'[][]' '{print "[" $2 "]"}' \
            | grep -n "IIS" \
            | cut -d: -f1)
        sed_expression=""
        for x in ${rows_to_filter}; do
            sed_expression+="${x}p;"
        done
        for subdomain in $(\
            cat "${folder}/BBB_fingerprint/B01_fingerprint.txt" \
                | awk '{ print $1 }' \
                | sed -n ${sed_expression}); do
            shortscan ${subdomain} \
                --concurrency 1000 \
                | tee -a "${folder}/BBB_fingerprint/B02_shortscan.txt"
        done
    fi
}

B03_TRUFFLEHOG() {
    stage="B03_TRUFFLEHOG"
    banner "FINGERPRINT - ${stage}"
    if [[ ! -d "${folder}/BBB_fingerprint/B03_trufflehog" ]]; then
        mkdir "${folder}/BBB_fingerprint/B03_trufflehog"
    fi
    #GITHUB
    project_name=$(basename ${folder_init})
    trufflehog github \
        --org=${project_name} \
        > "${folder}/BBB_fingerprint/B03_trufflehog/github.txt"
    #FILESYSTEM
    trufflehog filesystem \
        ${folder_init} \
        > "${folder}/BBB_fingerprint/B03_trufflehog/filesystem.txt"
}

B04_TRIVY() {
    stage="B04_TRIVY"
    banner "FINGERPRINT - ${stage}"
    if [[ ! -d "${folder}/BBB_fingerprint/B04_trivy" ]]; then
        mkdir "${folder}/BBB_fingerprint/B04_trivy"
    fi
    #FILESYSTEM
    trivy filesystem \
        ${folder_init} \
        -o "${folder}/BBB_fingerprint/B04_trivy/filesystem.txt"
}



#------------------------
while getopts ${optstring} options; do
    case ${options} in
        f)
            folder_init="${OPTARG}"
            folder=${folder_init}/Vulnerabilities
            rec_folder=${folder_init}/Reconnaissance
            nuclei_input="${rec_folder}/subdomains/subdomains_probe.txt"
            if [[ ! -d "${folder}" ]]; then
                mkdir "${folder}"
            fi
            ;;  
        a)
            task="${OPTARG}"
            case ${task} in 
                "B01_FINGERPRINT")
                    run_task B01_FINGERPRINT "B01_FINGERPRINT"
                    ;;
                "B02_SHORTSCAN")
                    run_task B02_SHORTSCAN "B02_SHORTSCAN"
                    ;;
                "B03_TRUFFLEHOG")
                    run_task B03_TRUFFLEHOG "B03_TRUFFLEHOG"
                    ;;
                "B04_TRIVY")
                    run_task B04_TRIVY "B04_TRIVY"
                    ;;
                esac
            ;;
        h)
            help_function
            exit 0
            ;;
        ?)
            echo "Error"
            exit 1
            ;;
        esac
    done